#seismic events of MB > 4.0. The events occurred in a cube near Fiji since 1964.
library(ggplot2)
# Create a scatter plot of seismic events
ggplot(data = quakes, aes(x = long, y = lat, color = depth)) +
geom_point() +
theme_bw() +
xlab("Longitude") +
ylab("Latitude") +
scale_color_gradientn(name = "Depth (KM)",
breaks = seq(min(quakes$depth), max(quakes$depth), by = 64),
colors = rainbow(5)) +
coord_fixed() +
theme(legend.key.height = unit(2.9, 'cm'),
legend.key.width = unit(0.5, 'cm'))
# Here we will use "quakes" data set that is inbuilt in R. The data set give the locations of 1000
#seismic events of MB > 4.0. The events occurred in a cube near Fiji since 1964.
library(ggplot2)
# Create a scatter plot of seismic events
ggplot(data = quakes, aes(x = long, y = lat, color = depth)) +
geom_point() +
theme_bw() +
xlab("Longitude") +
ylab("Latitude") +
scale_color_gradientn(name = "Depth (KM)",
breaks = seq(min(quakes$depth), max(quakes$depth), by = 64),
colors = rainbow(5))
# Here we will use "quakes" data set that is inbuilt in R. The data set give the locations of 1000
#seismic events of MB > 4.0. The events occurred in a cube near Fiji since 1964.
library(ggplot2)
# Create a scatter plot of seismic events
ggplot(data = quakes, aes(x = long, y = lat, color = depth)) +
geom_point() +
theme_bw() +
xlab("Longitude") +
ylab("Latitude") +
scale_color_gradientn(name = "Depth (KM)",
breaks = seq(min(quakes$depth), max(quakes$depth), by = 64),
colors = rainbow(5)) +
coord_fixed() +
theme(legend.key.height = unit(2.9, 'cm'),
legend.key.width = unit(0.5, 'cm'))
# Here we will use "quakes" data set that is inbuilt in R. The data set give the locations of 1000
#seismic events of MB > 4.0. The events occurred in a cube near Fiji since 1964.
library(ggplot2)
# Create a scatter plot of seismic events
ggplot(data = quakes, aes(x = long, y = lat, color = depth)) +
geom_point() +
theme_bw() +
xlab("Longitude") +
ylab("Latitude") +
scale_color_gradientn(name = "Depth (KM)",
breaks = seq(min(quakes$depth), max(quakes$depth), by = 64),
colors = rainbow(5)) +
coord_fixed() +
theme(legend.key.height = unit(1.9, 'cm'),
legend.key.width = unit(0.5, 'cm'))
#loading the ggplot2 package
library(ggridges)
install.packages("ggridges")
#loading the ggplot2 package
library(ggridges)
library(ggplot2)
new.col = c(rep("May 1973",31),rep("June 1973",30), rep("July 1973",31), rep("Aug 1973",31), rep("Sep 1973", 30))
airquality["new.col"] = new.col
data = airquality; data
data %>%  mutate(new.col = fct_relevel(new.col,"Sep 1973", "Aug 1973","July 1973", "June 1973", "May 1973" )) %>%
ggplot(aes(x=Temp, y=new.col, fill=new.col)) +
geom_density_ridges(alpha=1) + theme_bw() +
theme(legend.position = "none")+ labs(x = "Temperature (\u00B0F)",y="Months")+
theme(panel.border = element_rect(color = "black",fill = NA,size = .5))+
scale_fill_manual(values=c("#0000FF", "#6600FF", "#CC00FF", "#FF00CC", "#FF0066"))
#loading the ggplot2 package
library(ggridges)
library(ggplot2)
data = airquality   #accessing data
data = na.omit(data) # removing NA values
new.col = c(rep("May 1973",31),rep("June 1973",30), rep("July 1973",31), rep("Aug 1973",31), rep("Sep 1973", 30))
airquality["new.col"] = new.col
data = airquality; data
data %>%  mutate(new.col = fct_relevel(new.col,"Sep 1973", "Aug 1973","July 1973", "June 1973", "May 1973" )) %>%
ggplot(aes(x=Temp, y=new.col, fill=new.col)) +
geom_density_ridges(alpha=1) + theme_bw() +
theme(legend.position = "none")+ labs(x = "Temperature (\u00B0F)",y="Months")+
theme(panel.border = element_rect(color = "black",fill = NA,size = .5))+
scale_fill_manual(values=c("#0000FF", "#6600FF", "#CC00FF", "#FF00CC", "#FF0066"))
#loading the ggplot2 package
library(ggridges)
library(ggplot2)
data = airquality   #accessing data
data = na.omit(data) # removing NA values
ggplot(data = airquality, aes(x = Temp, y = Ozone))+
geom_point(col="red") + geom_smooth() + theme_classic() +
theme(panel.border = element_rect(color = "black",fill = NA,size = 1) )+
labs(x="Maximum daily temperature (\u00B0F)",y="Mean ozone in parts per billion")
new.col = c(rep("May 1973",31),rep("June 1973",30), rep("July 1973",31), rep("Aug 1973",31), rep("Sep 1973", 30))
airquality["new.col"] = new.col
data = airquality; data
data %>%  mutate(new.col = fct_relevel(new.col,"Sep 1973", "Aug 1973","July 1973", "June 1973", "May 1973" )) %>%
ggplot(aes(x=Temp, y=new.col, fill=new.col)) +
geom_density_ridges(alpha=1) + theme_bw() +
theme(legend.position = "none")+ labs(x = "Temperature (\u00B0F)",y="Months")+
theme(panel.border = element_rect(color = "black",fill = NA,size = .5))+
scale_fill_manual(values=c("#0000FF", "#6600FF", "#CC00FF", "#FF00CC", "#FF0066"))
#loading the ggplot2 package
library(ggridges)
library(ggplot2)
library(dplyr)
data = airquality   #accessing data
data = na.omit(data) # removing NA values
new.col = c(rep("May 1973",31),rep("June 1973",30), rep("July 1973",31), rep("Aug 1973",31), rep("Sep 1973", 30))
airquality["new.col"] = new.col
data = airquality; data
data %>%  mutate(new.col = fct_relevel(new.col,"Sep 1973", "Aug 1973","July 1973", "June 1973", "May 1973" )) %>%
ggplot(aes(x=Temp, y=new.col, fill=new.col)) +
geom_density_ridges(alpha=1) + theme_bw() +
theme(legend.position = "none")+ labs(x = "Temperature (\u00B0F)",y="Months")+
theme(panel.border = element_rect(color = "black",fill = NA,size = .5))+
scale_fill_manual(values=c("#0000FF", "#6600FF", "#CC00FF", "#FF00CC", "#FF0066"))
new.col = c(rep("May 1973",31),rep("June 1973",30), rep("July 1973",31), rep("Aug 1973",31), rep("Sep 1973", 30))
airquality["new.col"] = new.col
data = airquality; data
data %>%  mutate(new.col = fct_relevel(new.col,"Sep 1973", "Aug 1973","July 1973", "June 1973", "May 1973" )) %>%
ggplot(aes(x=Temp, y=new.col, fill=new.col)) +
geom_density_ridges(alpha=1) + theme_bw() +
theme(legend.position = "none")+ labs(x = "Temperature (\u00B0F)",y="Months")+
theme(panel.border = element_rect(color = "black",fill = NA,size = .5))+
scale_fill_manual(values=c("#0000FF", "#6600FF", "#CC00FF", "#FF00CC", "#FF0066"))
data = airquality; data
hist(airquality$Ozone, col = "green", main = "Mean Ozone Level", xlab = "Mean ozone in parts per billion")
#install ggplot2
#install.packages("ggplot2")
#loading the ggplot2
library(ggplot2)
#install the tidyverse package which has fct_relevel function
#install.packages("tidyverse")
library(tidyverse)
new.col = c(rep("May 1973",31),rep("June 1973",30), rep("July 1973",31), rep("Aug 1973",31), rep("Sep 1973", 30))
airquality["new.col"] = new.col
data = airquality; data
data %>%  mutate(new.col = fct_relevel(new.col,"May 1973", "June 1973", "July 1973", "Aug 1973", "Sep 1973" )) %>%
ggplot(aes(x=new.col, y=Ozone, fill=new.col)) +
geom_boxplot(alpha=1) + theme_bw()+
theme(legend.position="none") + labs(y = "Mean ozone in parts per billion",x="Months")+
theme(panel.border = element_rect(color = "black",fill = NA,size = .5))  +
scale_fill_manual(values=heat.colors(5))
library(ggplot2)
rm(list = ls())
library(ggplot2)
library(tidyverse)
new.col = c(rep("May 1973",31),rep("June 1973",30), rep("July 1973",31), rep("Aug 1973",31), rep("Sep 1973", 30))
airquality["new.col"] = new.col
data = airquality; data
data %>%  mutate(new.col = fct_relevel(new.col,"May 1973", "June 1973", "July 1973", "Aug 1973", "Sep 1973" )) %>%
ggplot(aes(x=new.col, y=Ozone, fill=new.col)) +
geom_boxplot(alpha=1) + theme_bw()+
theme(legend.position="none") + labs(y = "Mean ozone in parts per billion",x="Months")+
theme(panel.border = element_rect(color = "black",fill = NA,size = .5))  +
scale_fill_manual(values=heat.colors(5))
# Clear the workspace
rm(list = ls())
# Load necessary libraries
library(ggplot2)
library(tidyverse)
# Create a new column for months
new.col = c(rep("May 1973", 31),
rep("June 1973", 30),
rep("July 1973", 31),
rep("Aug 1973", 31),
rep("Sep 1973", 30))
# Add the new column to the airquality dataset
airquality["new.col"] = new.col
data = airquality
# Create a boxplot of Ozone levels by month
data %>%
mutate(new.col = fct_relevel(new.col,
"May 1973",
"June 1973",
"July 1973",
"Aug 1973",
"Sep 1973")) %>%
ggplot(aes(x = new.col, y = Ozone, fill = new.col)) +
geom_boxplot(alpha = 1) +
theme_bw() +
theme(legend.position = "none") +
labs(y = "Mean Ozone (ppb)", x = "Months") +
theme(panel.border = element_rect(color = "black", fill = NA, size = 0.5)) +
scale_fill_manual(values = heat.colors(5))
# Clear the workspace
rm(list = ls())
#loading the ggplot2 package
library(ggridges)
library(ggplot2)
new.col = c(rep("May 1973",31),rep("June 1973",30), rep("July 1973",31), rep("Aug 1973",31), rep("Sep 1973", 30))
airquality["new.col"] = new.col
data = airquality; data
data %>%  mutate(new.col = fct_relevel(new.col,"Sep 1973", "Aug 1973","July 1973", "June 1973", "May 1973" )) %>%
ggplot(aes(x=Temp, y=new.col, fill=new.col)) +
geom_density_ridges(alpha=1) + theme_bw() +
theme(legend.position = "none")+ labs(x = "Temperature (\u00B0F)",y="Months")+
theme(panel.border = element_rect(color = "black",fill = NA,size = .5))+
scale_fill_manual(values=c("#0000FF", "#6600FF", "#CC00FF", "#FF00CC", "#FF0066"))
# Clear the workspace
rm(list = ls())
# Load necessary libraries
library(ggplot2)
library(tidyverse)
# Create a new column for months
new.col = c(rep("May 1973", 31),
rep("June 1973", 30),
rep("July 1973", 31),
rep("Aug 1973", 31),
rep("Sep 1973", 30))
# Add the new column to the airquality dataset
airquality["new.col"] = new.col
data = airquality
# Create a boxplot of Ozone levels by month
data %>%
mutate(new.col = fct_relevel(new.col,
"May 1973",
"June 1973",
"July 1973",
"Aug 1973",
"Sep 1973")) %>%
ggplot(aes(x = new.col, y = Ozone, fill = new.col)) +
geom_boxplot(alpha = 1) +
theme_bw() +
theme(legend.position = "none") +
labs(y = "Mean Ozone (ppb)", x = "Months") +
theme(panel.border = element_rect(color = "black", fill = NA, size = 0.5)) +
scale_fill_manual(values = heat.colors(5))
#
# Clear the workspace
rm(list = ls())
#loading the ggplot2 package
library(ggridges)
library(ggplot2)
new.col = c(rep("May 1973",31),rep("June 1973",30), rep("July 1973",31), rep("Aug 1973",31), rep("Sep 1973", 30))
airquality["new.col"] = new.col
data = airquality; data
data %>%  mutate(new.col = fct_relevel(new.col,"Sep 1973", "Aug 1973","July 1973", "June 1973", "May 1973" )) %>%
ggplot(aes(x=Temp, y=new.col, fill=new.col)) +
geom_density_ridges(alpha=1) + theme_bw() +
theme(legend.position = "none")+ labs(x = "Temperature (\u00B0F)",y="Months")+
theme(panel.border = element_rect(color = "black",fill = NA,size = .5))+
scale_fill_manual(values=c("#0000FF", "#6600FF", "#CC00FF", "#FF00CC", "#FF0066"))
#Temperature variation across the months
# Clear the workspace
rm(list = ls())
# Load necessary libraries
library(ggridges)
library(ggplot2)
library(tidyverse)
# Create a new column for months
new.col = c(rep("May 1973", 31),
rep("June 1973", 30),
rep("July 1973", 31),
rep("Aug 1973", 31),
rep("Sep 1973", 30))
# Add the new column to the airquality dataset
airquality["new.col"] = new.col
data = airquality
# Create a ridge plot for temperature variation by month
data %>%
mutate(new.col = fct_relevel(new.col,
"Sep 1973",
"Aug 1973",
"July 1973",
"June 1973",
"May 1973")) %>%
ggplot(aes(x = Temp, y = new.col, fill = new.col)) +
geom_density_ridges(alpha = 1) +
theme_bw() +
theme(legend.position = "none") +
labs(x = "Temperature (°F)", y = "Months") +
theme(panel.border = element_rect(color = "black", fill = NA, size = 0.5)) +
scale_fill_manual(values = c("#0000FF", "#6600FF", "#CC00FF", "#FF00CC", "#FF0066"))
library(ggplot2)
data = na.omit(lincoln_weather)
ggplot(data, aes(x =`Mean Temperature [F]` ,
y = `Mean Dew Point [F]`,size = CloudCover, color=Events)) +
geom_point(alpha = 1) +  labs(title= "", y="Mean Dew Point (\u00B0F)",
x = "Mean Temperature (\u00B0F)") + theme_bw() + scale_size( name="Cloud Cover (Okta)")+
theme_classic()+ theme(legend.position=c(.12,.65),panel.border = element_rect(color =
"black",fill = NA,size = .5) )+  theme(plot.title = element_text(size = 6, face = "bold"),
legend.title=element_text(size=6), legend.text=element_text(size=6)) +
theme(axis.text=element_text(size=8), axis.title=element_text(size=8))
rm(list = ls())
library(ggplot2)
data = na.omit(lincoln_weather)
ggplot(data, aes(x =`Mean Temperature [F]` ,
y = `Mean Dew Point [F]`,size = CloudCover, color=Events)) +
geom_point(alpha = 1) +  labs(title= "", y="Mean Dew Point (\u00B0F)",
x = "Mean Temperature (\u00B0F)") + theme_bw() + scale_size( name="Cloud Cover (Okta)")+
theme_classic()+ theme(legend.position=c(.12,.65),panel.border = element_rect(color =
"black",fill = NA,size = .5) )+  theme(plot.title = element_text(size = 6, face = "bold"),
legend.title=element_text(size=6), legend.text=element_text(size=6)) +
theme(axis.text=element_text(size=8), axis.title=element_text(size=8))
# Clear the workspace
rm(list = ls())
# Load the necessary library
library(ggplot2)
# Remove rows with missing values from the dataset
data = na.omit(lincoln_weather)
# Create a scatter plot
ggplot(data, aes(x = `Mean Temperature [F]`,
y = `Mean Dew Point [F]`,
size = CloudCover,
color = Events)) +
geom_point(alpha = 1) +
labs(title = "",
y = "Mean Dew Point (°F)",
x = "Mean Temperature (°F)") +
theme_bw() +
scale_size(name = "Cloud Cover (Okta)") +
theme_classic() +
theme(legend.position = c(0.12, 0.65),
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
plot.title = element_text(size = 6, face = "bold"),
legend.title = element_text(size = 6),
legend.text = element_text(size = 6),
axis.text = element_text(size = 8),
axis.title = element_text(size = 8))
library(GGally)
install.packages("GGally")
library(GGally)
library(tidyverse)
library(ggplot2)
new.col = c(rep("May",31),rep("June",30), rep("July",31), rep("Aug",31), rep("Sep", 30))
airquality["new.col"] = new.col
data = na.omit(airquality); data
ggpairs(data, columns = c(1,3,4), ggplot2::aes(colour=as.character(new.col),alpha = 0.5),
upper = list(continuous = wrap("cor", size = 7.5))) + theme_bw()
library(GGally)
library(tidyverse)
library(ggplot2)
new.col = c(rep("May",31),rep("June",30), rep("July",31), rep("Aug",31), rep("Sep", 30))
airquality["new.col"] = new.col
data = na.omit(airquality);
ggpairs(data, columns = c(1,3,4), ggplot2::aes(colour=as.character(new.col),alpha = 0.5),
upper = list(continuous = wrap("cor", size = 7.5))) + theme_bw()
#Pairplot
rm(list = ls())
# Load necessary libraries
library(GGally)
library(tidyverse)
library(ggplot2)
# Create a new column for months
new.col = c(rep("May", 31),
rep("June", 30),
rep("July", 31),
rep("Aug", 31),
rep("Sep", 30))
# Add the new column to the airquality dataset and remove rows with missing values
airquality["new.col"] = new.col
data = na.omit(airquality)
# Create a pairwise plot
ggpairs(data,
columns = c(1, 3, 4),
ggplot2::aes(colour = as.character(new.col), alpha = 0.5),
upper = list(continuous = wrap("cor", size = 7.5))) +
theme_bw()
set.seed(2022)
df <- data.frame(year=1:30,count=rpois(30, lambda = 2))
head(df)
library(ggplot2)
bars <- ggplot(df, aes(year, count, fill = as.character(year))) +
geom_bar(stat = "identity") +
labs(x ="Years" , y = "Number of Earthquakes") +
theme(legend.position = "none")
bars + scale_fill_hue() + geom_text(aes(label=count), vjust=-0.3, size=3.5)
rm(list = ls())
set.seed(2022)
df <- data.frame(year=1:30,count=rpois(30, lambda = 2))
head(df)
library(ggplot2)
bars <- ggplot(df, aes(year, count, fill = as.character(year))) +
geom_bar(stat = "identity") +
labs(x ="Years" , y = "Number of Earthquakes") +
theme(legend.position = "none")
bars + scale_fill_hue() + geom_text(aes(label=count), vjust=-0.3, size=3.5)
rm(list = ls())
set.seed(2024)
df <- data.frame(year=1:30,count=rpois(30, lambda = 2))
head(df)
library(ggplot2)
bars <- ggplot(df, aes(year, count, fill = as.character(year))) +
geom_bar(stat = "identity") +
labs(x ="Years" , y = "Number of Earthquakes") +
theme(legend.position = "none")
bars + scale_fill_hue() + geom_text(aes(label=count), vjust=-0.3, size=3.5)
# Clear the workspace
rm(list = ls())
# Set seed for reproducibility
set.seed(2024)
# Create a data frame with years and random earthquake counts
df <- data.frame(year = 1:30, count = rpois(30, lambda = 2))
# Display the first few rows of the data frame
head(df)
# Load the ggplot2 library
library(ggplot2)
# Create the bar plot
bars <- ggplot(df, aes(year, count, fill = as.character(year))) +
geom_bar(stat = "identity") +
labs(x = "Years", y = "Number of Earthquakes") +
theme(legend.position = "none")
# Add colors and labels to the bars
bars +
scale_fill_hue() +
geom_text(aes(label = count), vjust = -0.3, size = 3.5)
# Clear the workspace
rm(list = ls())
# Set seed for reproducibility
set.seed(2022)
# Create a data frame with years and random earthquake counts
df <- data.frame(year = 1:30, count = rpois(30, lambda = 2))
# Display the first few rows of the data frame
head(df)
# Load the ggplot2 library
library(ggplot2)
# Create the bar plot
bars <- ggplot(df, aes(year, count, fill = as.character(year))) +
geom_bar(stat = "identity") +
labs(x = "Years", y = "Number of Earthquakes") +
theme(legend.position = "none")
# Add colors and labels to the bars
bars +
scale_fill_hue() +
geom_text(aes(label = count), vjust = -0.3, size = 3.5)
# simulating three samples from exponential distribution with different rate
rm(list = ls())
library(tidyverse)
library(hrbrthemes)
install.packages("hrbrthemes")
# simulating three samples from exponential distribution with different rate
rm(list = ls())
library(tidyverse)
library(hrbrthemes)
library(viridis)
install.packages(‘viridis’)
install.packages("v")
install.packages("viridis")
# simulating three samples from exponential distribution with different rate
rm(list = ls())
library(tidyverse)
library(hrbrthemes)
library(viridis)
set.seed(2022)
size = 500
sample1 = rexp(size,1.2)
sample2 = rexp(size, 0.5)
sample3 = rexp(size, 0.2)
data <- data.frame(
name=c( rep("Rate = 1.2",size), rep("Rate = 0.5",size), rep("Rate = 0.2",size) ),
value=c(sample1, sample2, sample3 )
)
# Plot
ggplot(data, aes(x=name, y=value, fill=name)) +
geom_boxplot() + scale_fill_viridis(discrete = TRUE, alpha=1) +
geom_jitter(color="black", size=0.4, alpha=0.9) +  theme_minimal() +
theme(legend.position="none",plot.title = element_text(size=11)) +  xlab("") + ylab("")
# Clear the workspace
rm(list = ls())
# Load necessary libraries
library(tidyverse)
library(hrbrthemes)
library(viridis)
# Set seed for reproducibility
set.seed(2022)
# Define sample size
size = 500
# Simulate samples from exponential distributions with different rates
sample1 = rexp(size, 1.2)
sample2 = rexp(size, 0.5)
sample3 = rexp(size, 0.2)
# Combine samples into a data frame
data <- data.frame(
name = c(rep("Rate = 1.2", size), rep("Rate = 0.5", size), rep("Rate = 0.2", size)),
value = c(sample1, sample2, sample3)
)
# Create the boxplot
ggplot(data, aes(x = name, y = value, fill = name)) +
geom_boxplot() +
geom_ji
# Clear the workspace
rm(list = ls())
# Load necessary libraries
library(tidyverse)
library(hrbrthemes)
library(viridis)
# Set seed for reproducibility
set.seed(2022)
# Define sample size
size = 500
# Simulate samples from exponential distributions with different rates
sample1 = rexp(size, 1.2)
sample2 = rexp(size, 0.5)
sample3 = rexp(size, 0.2)
# Combine samples into a data frame
data <- data.frame(
name = c(rep("Rate = 1.2", size), rep("Rate = 0.5", size), rep("Rate = 0.2", size)),
value = c(sample1, sample2, sample3)
)
# Create the boxplot
ggplot(data, aes(x = name, y = value, fill = name)) +
geom_boxplot() +
geom_jitter(color = "black", size = 0.4, alpha = 0.9) +
scale_fill_viridis(discrete = TRUE, alpha = 1) +
theme_minimal() +
theme(legend.position = "none", plot.title = element_text(size = 11)) +
xlab("") +
ylab("") +
ggtitle("Boxplot of Exponential Samples with Different Rates")
